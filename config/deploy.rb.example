lock '3.5.0'

server '45.55.139.58', roles: [:web, :app, :db], port: fetch(:port), user: fetch(:user), primary: true
set :application_name, "learn"
set :repo_url, 'git@github.com:RailsApps/learn-rails.git'
set :nginx_server_name, "45.55.139.58"
set :ruby_version, 'ruby-2.3.1'

set :deploy_user, 'deploy'
set :user, ENV['user'] || fetch(:deploy_user)
set :application, "#{fetch :application_name}_#{fetch :stage}"
set :deploy_to, "/home/#{fetch(:user)}/applications/#{fetch(:application)}"
set :branch, ENV["REVISION"] || ENV["BRANCH"] || "master"
set :unicorn_name, "unicorn_#{fetch(:application)}"

set :pg_env, fetch(:rails_env)
set :pg_encoding, "utf8"
set :pg_database, fetch(:application)
set :pg_user, fetch(:application_name)
set :pg_host, "localhost"
set :pg_password, 'qwerty123'

set :linked_files, %w{config/database.yml config/unicorn.rb config/secrets.yml .ruby-version}
set :linked_dirs, fetch(:linked_dirs, []) + %w{log pids sockets public/uploads public/assets tmp/cache}

set :monit_notification_type, :email # or :slack . Configure mailserver in monitrc file or slack in slack_notifications.sh
set :monit_password, "secure_pass" # to access /monit url

set :db_local_clean, true
set :db_remote_clean, true
set :locals_rails_env, "development"
set :dump_file_folder, "../db"
set :conditionally_migrate, true

set :log_level, :debug
set :port, 22
set :scm, :git
set :deploy_via, :remote_cache
set :use_sudo, false
set :bundle_binstubs, nil
set :ssh_options, { forward_agent: true, auth_methods: %w(publickey password), user: fetch(:user) }
set :keep_releases, 5

after 'postgresql:generate_database_yml', 'pg:setup'

task :setup do
  invoke "requirements:make_dirs"
end

namespace :requirements do
  desc 'Create Directories for Puma Pids and Socket'
  task :make_dirs do
    on roles(:app) do
      execute "mkdir #{shared_path}/sockets -p"
      execute "mkdir #{shared_path}/pids -p"
    end
  end
end

load 'config/config_path.rb'
Dir.glob('config/recipes/*.rb').each { |r| load r }
